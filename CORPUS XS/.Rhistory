setwd("~")
getwd
getwd()
getwd()
## EFFACE TOUS LES ELEMENTS EXISTANTS
rm(list=ls(all=TRUE))
corpus="CORPUS XS"
ntopics=20
## WORKING DIRECTORY
dir=paste0("~/TOPIC MODELING OBESITY/", corpus)
setwd(dir)
lambda=0.6
nb_terms=10
## CHARGEMENT DES DONNEES
load(paste0("~/TOPIC MODELING OBESITY/output data/", substr(corpus,8,nchar(corpus)), ".topic", ntopics, ".terms"))
## DISTRIBUTION DES MOTS DANS LES TOPICS (LOI DE PROBA)
terms.topic=topic.terms[,2:(ntopics+1)]
rownames(terms.topic)=topic.terms$V5
for (i in 1:ntopics){
terms.topic[,i]=terms.topic[,i]/rep(sum(terms.topic[,i]), dim(terms.topic)[1])
}
colSums(terms.topic)
## TERMES CARACTERISTIQUES DES TOPICS
# Calcul fréquence & relevance
prob.marg=rowSums(topic.terms[,2:(ntopics+1)]) # probabilité marginale de chacun des termes
relevance=lambda*log(terms.topic)+(1-lambda)*log(terms.topic/prob.marg)
frequency=log(terms.topic)
# Création des fichier txt
for(i in 1:ntopics) {
rel_terms=topic.terms$V5[apply(relevance, 2, order, decreasing=T)[1:nb_terms,i]]
rel_val=sort(relevance[,i], decreasing=T)[1:nb_terms]
relevant.terms<-cbind(rel_terms,rel_val)
cat("\n", file=paste0("discriminant-terms-", ntopics, "topics.txt"), append=TRUE)
write.table(relevant.terms,file=paste0("discriminant-terms-", ntopics, "topics.txt"),row.names=F,col.names=F,append=T,sep="\t")}
for(i in 1:ntopics) {
top_terms=topic.terms$V5[apply(frequency, 2, order, decreasing=T)[1:nb_terms,i]]
freq_val=sort(frequency[,i], decreasing=T)[1:nb_terms]
top.terms<-cbind(top_terms,freq_val)
cat("\n", file=paste0("frequent-terms-", ntopics, "topics.txt"), append=TRUE)
write.table(top.terms,file=paste0("frequent-terms-", ntopics, "topics.txt"),row.names=F,col.names=F,append=T,sep="\t")}
## EFFACE TOUS LES ELEMENTS EXISTANTS
rm(list=ls(all=TRUE))
corpus="CORPUS XS"
ntopics=20
## WORKING DIRECTORY
dir=paste0("~/TOPIC MODELING OBESITY/", corpus)
setwd(dir)
library(XLConnect)
## CREATION DES FICHIERS EXCEL TOP TERMS ET RELEVANT TERMS A PARTIR DES FICHIERS TXT
for (critere in c("frequent", "discriminant")) {
allLines = readLines(paste0(critere, "-terms-", ntopics, "topics.txt"))
if (allLines[[1]] == "") {
allLines = allLines[-1]
}
N = min(which(allLines == "")) - 1
stopifnot(allLines[seq(N+1, length(allLines), by=N+1)] == "")
outfile = paste0(critere, "-terms-", ntopics, "topics.xls")
if (file.exists(outfile)) file.remove(outfile)
wb = loadWorkbook(outfile, create = TRUE)
createSheet(wb,paste0(critere,"-terms"))
setColumnWidth(wb, 1, 1:10, 4000)
styleTitre = createCellStyle(wb)
setFillPattern(styleTitre, fill = XLC$FILL.SOLID_FOREGROUND)
setFillForegroundColor(styleTitre, XLC$COLOR.LIGHT_ORANGE)
a = 1
k = 0
while (a < length(allLines)) {
b = a + N - 1
parts = strsplit(allLines[a:b], split = "\\s+")
terms = sapply(parts, function(x) x[[1]])
terms = substring(terms, 2, nchar(terms)-1)
df = data.frame(terms=terms)
colnames(df) = paste0("Topic ", k+1)
startRow = 1 + floor(k / 10)*(N+1)
startCol = 1 + (k %% 10)
writeWorksheet(wb, df, 1, startRow, startCol)
setCellStyle(wb, sheet=1, row=startRow, col=startCol, cellstyle = styleTitre)
a = b + 2
k = k + 1
}
saveWorkbook(wb, outfile)
file.remove(paste0(critere, "-terms-", ntopics, "topics.txt"))
}
